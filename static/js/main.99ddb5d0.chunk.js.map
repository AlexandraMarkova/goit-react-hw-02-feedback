{"version":3,"sources":["components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Container","children","className","Section","title","FeedbackOptions","options","onLeaveFeedback","map","option","name","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleIncrement","e","target","setState","prevState","this","positiveFeedback","countTotalFeedback","Math","round","totalFeedback","feedbackPercentage","countPositiveFeedbackPercentage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAKeA,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAU,YAAf,SAA4BD,KCOjDE,EAPC,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAUG,EAAb,EAAaA,MAAb,OACd,oCACE,6BAAKA,IACJH,MCcUI,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKL,UAAU,UAAf,SACE,qBAAKA,UAAU,oBAAf,SACGI,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAMD,EACNE,KAAK,SAELC,QAASL,EAJX,SAMGE,GAHIA,WCNAI,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC+B3BC,EA7BI,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOY,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,IAAKC,EAA9B,EAA8BA,MAAOC,EAArC,EAAqCA,mBAArC,OACjBD,EAAQ,EACN,gCACE,6BAAKf,IACL,+BACE,wCACQ,sBAAMF,UAAU,iBAAhB,SAAkCc,OAE1C,0CAEE,sBAAMd,UAAU,iBAAhB,SAAkCe,OAEpC,uCACO,sBAAMf,UAAU,iBAAhB,SAAkCgB,OAEzC,wCAEE,sBAAMhB,UAAU,iBAAhB,SAAkCiB,OAEpC,oDAEE,uBAAMjB,UAAU,iBAAhB,UAAkCkB,EAAlC,gBAKN,cAAC,EAAD,CAAcN,QAAQ,uBC6CXO,E,4MAvDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,gBAAkB,SAAAC,GAChB,IAAMd,EAAOc,EAAEC,OAAOf,KACtB,EAAKgB,UAAS,SAAAC,GAAS,sBACpBjB,EAAOiB,EAAUjB,GAAQ,O,wDAI9B,WAEE,OADckB,KAAKN,MAAMN,KAAOY,KAAKN,MAAML,QAAUW,KAAKN,MAAMJ,M,6CAIlE,WACE,IAAMW,EAEF,KADAD,KAAKE,sBAAwBF,KAAKN,MAAML,QAAUW,KAAKN,MAAMJ,MAE/DU,KAAKE,qBAEP,OAAOD,EAAmBE,KAAKC,MAAMH,GAAoB,I,oBAG3D,WACE,IAAMI,EAAgBL,KAAKE,qBACrBI,EAAqBN,KAAKO,kCAFzB,EAGwBP,KAAKN,MAA5BN,EAHD,EAGCA,KAAMC,EAHP,EAGOA,QAASC,EAHhB,EAGgBA,IAEvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CACEE,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBqB,KAAKL,oBAI1B,cAAC,EAAD,CAASnB,MAAM,aAAf,SACE,cAAC,EAAD,CACEY,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,mBAAoBc,a,GA3DdE,IAAMC,W,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.99ddb5d0.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.modules.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\n// import './Container.modules.css';\n\nconst Section = ({ children, title }) => (\n  <section>\n    <h1>{title}</h1>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className=\"Counter\">\n    <div className=\"Counter__controls\">\n      {options.map(option => (\n        <button\n          name={option}\n          type=\"button\"\n          key={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  </div>\n);\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nexport default Notification;\n","import React from 'react';\nimport Notification from '../Notification';\n// import PropTypes from 'prop-types';\n\nconst Statistics = ({ title, good, neutral, bad, total, positivePercentage }) =>\n  total > 0 ? (\n    <div>\n      <h2>{title}</h2>\n      <ul>\n        <li>\n          Good: <span className=\"Counter__value\">{good}</span>\n        </li>\n        <li>\n          Neutral:\n          <span className=\"Counter__value\">{neutral}</span>\n        </li>\n        <li>\n          Bad: <span className=\"Counter__value\">{bad}</span>\n        </li>\n        <li>\n          Total:\n          <span className=\"Counter__value\">{total}</span>\n        </li>\n        <li>\n          Positive feedback:\n          <span className=\"Counter__value\">{positivePercentage}%</span>\n        </li>\n      </ul>\n    </div>\n  ) : (\n    <Notification message=\"No feedback given\" />\n  );\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends React.Component {\n  static propTypes = {\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onLeaveFeedback: PropTypes.number,\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const positiveFeedback =\n      ((this.countTotalFeedback() - (this.state.neutral + this.state.bad)) *\n        100) /\n      this.countTotalFeedback();\n\n    return positiveFeedback ? Math.round(positiveFeedback) : 0;\n  }\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const feedbackPercentage = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={feedbackPercentage}\n          ></Statistics>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}